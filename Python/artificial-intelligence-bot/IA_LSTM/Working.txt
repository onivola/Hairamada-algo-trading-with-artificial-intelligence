import random

foo = ['a', 'b', 'c', 'd', 'e']
print(random.choice(foo))

def open_dataset():
    file = r"C:\Users\Onintsoa\AppData\Roaming\MetaQuotes\Terminal\F762D69EEEA9B4430D7F17C82167C844\MQL5\Files\Data\datasettest.csv"
    #d= pd.read_csv(file,encoding='UTF-16')
    try:
        f = open(file, 'rb')
        
        d= pd.read_csv(file,encoding='UTF-16') #ascii
                # Close opend file
        f.close()
        #print("dataset file read")
        return d
    except OSError:
        print("Could not open/read file:", file)

        return []
        sys.exit()

def Write_Predect(value):
    file = r"C:\Users\Onintsoa\AppData\Roaming\MetaQuotes\Terminal\F762D69EEEA9B4430D7F17C82167C844\MQL5\Files\Data\predict.csv"
    if(value>=1):
        value = random.uniform(1,0.9)

    if(value<=0):
        value = random.uniform(0,0.1)
    try:
        f = open(file,'w')
        f.write(str(value))
        f.close()
        print("Predict file writen")
        return True
    except IOError as e:
        print(e.args)
        return False
        pass
        
#Check_open_dataset()
def CSVdiff_2ma(ma05,ma15,ma012,ma112):
    ma = []
    X = []
    Y = []
    ma.append(ma05)
    ma.append(ma012)
    ma = list(itertools.chain.from_iterable(ma))
    ma_max = max(ma)
    
    y_value = 1

    for i in range(0,len(ma)): #ma5 ma12
        X.append(abs(ma_max-ma[i]))
    #print(X)
    return [X,Y]


def CSVGet_X(df):
    X = []
    Pma05 = []
    Pma012 = []
    Pma = []
    for j in range(14,-1,-1): #15 avant croix
        Pma05.append(float(df['MA5'][j]))
        Pma012.append(float(df['MA12'][j]))
    
    xy = CSVdiff_2ma(Pma05,Pma,Pma012,Pma)
    
    old_min = min(xy[0])
    old_range = max(xy[0])
    new_min = 0
    new_range = 1
    xnorm = [float((n - old_min) / old_range * new_range + new_min) for n in xy[0]]
    X.append(xnorm)
    return X
#dc = CSVDataset()
def Check_Filechange(last_nb,dc):
    if(last_nb<float(dc['MA5'][16])):
        return True
    return False

    
#dc = CSVDataset()
#print(dc)
#nb_pos0 = dc['MA5'][16]
#print(nb_pos0)
#XTEST = CSVGet_X(dc)

#print(XTEST)
#print(len(XTEST))

#last_nb = 0
#df = CSVDataset()

#Write_Predect(0)
last_nb = -1
def run():
    last_nb = -1
    last_predict = -10
    while(1):
        dc = open_dataset()
        time.sleep(5)
        if 'MA5' in dc:
            #print(dc)
            new_nb = float(dc['MA5'][15])
            #print(last_nb)
            if(new_nb>last_nb):
                XTEST = CSVGet_X(dc)
                print(XTEST)
                res = model.predict(XTEST) #predict
                print(res)
                res = round(float(res[0]),4)
                if(res==last_predict):
                    last_predict = res
                    res = res+0.001
                if(res!=last_predict):
                    last_predict = res
                
                    
                while(Write_Predect(res)==False): #write predict value
                    e = 1
                last_nb=new_nb